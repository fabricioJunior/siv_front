// Mocks generated by Mockito 5.4.4 from annotations
// in autenticacao/test/doubles/local_data_source.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:autenticacao/data/local/dtos/token_dto.dart' as _i4;
import 'package:autenticacao/domain/data/data_sourcers/local/i_token_local_data_source.dart'
    as _i2;
import 'package:core/data_sourcers.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ITokenLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockITokenLocalDataSource extends _i1.Mock
    implements _i2.ITokenLocalDataSource {
  MockITokenLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> put(_i4.TokenDto? entity) => (super.noSuchMethod(
        Invocation.method(
          #put,
          [entity],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> putAll(Iterable<_i4.TokenDto>? entities) =>
      (super.noSuchMethod(
        Invocation.method(
          #putAll,
          [entities],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i4.TokenDto?> fetchById<Key>(Key? id) => (super.noSuchMethod(
        Invocation.method(
          #fetchById,
          [id],
        ),
        returnValue: _i3.Future<_i4.TokenDto?>.value(),
      ) as _i3.Future<_i4.TokenDto?>);

  @override
  _i3.Future<Iterable<_i4.TokenDto>> fetchAll() => (super.noSuchMethod(
        Invocation.method(
          #fetchAll,
          [],
        ),
        returnValue: _i3.Future<Iterable<_i4.TokenDto>>.value(<_i4.TokenDto>[]),
      ) as _i3.Future<Iterable<_i4.TokenDto>>);

  @override
  _i3.Future<Iterable<_i4.TokenDto>> fetchWhere(
          _i5.Test<dynamic, dynamic>? test) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchWhere,
          [test],
        ),
        returnValue: _i3.Future<Iterable<_i4.TokenDto>>.value(<_i4.TokenDto>[]),
      ) as _i3.Future<Iterable<_i4.TokenDto>>);

  @override
  _i3.Future<void> deleteAll() => (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
