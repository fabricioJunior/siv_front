// Mocks generated by Mockito 5.4.4 from annotations
// in siv_front/test/doubles/use_cases.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:autenticacao/domain/data/repositories/i_token_repository.dart'
    as _i2;
import 'package:autenticacao/domain/data/repositories/i_usuarios_repository.dart'
    as _i3;
import 'package:autenticacao/domain/models/token.dart' as _i6;
import 'package:autenticacao/domain/models/usuario.dart' as _i4;
import 'package:autenticacao/domain/usecases/deslogar.dart' as _i10;
import 'package:autenticacao/domain/usecases/esta_autenticado.dart' as _i9;
import 'package:autenticacao/domain/usecases/on_autenticado.dart' as _i5;
import 'package:autenticacao/domain/usecases/on_desautenticado.dart' as _i8;
import 'package:autenticacao/domain/usecases/recuperar_usuario_da_sessao.dart'
    as _i11;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeITokenRepository_0 extends _i1.SmartFake
    implements _i2.ITokenRepository {
  _FakeITokenRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIUsuariosRepository_1 extends _i1.SmartFake
    implements _i3.IUsuariosRepository {
  _FakeIUsuariosRepository_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUsuario_2 extends _i1.SmartFake implements _i4.Usuario {
  _FakeUsuario_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [OnAutenticado].
///
/// See the documentation for Mockito's code generation for more information.
class MockOnAutenticado extends _i1.Mock implements _i5.OnAutenticado {
  MockOnAutenticado() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ITokenRepository get tokenRepository => (super.noSuchMethod(
        Invocation.getter(#tokenRepository),
        returnValue: _FakeITokenRepository_0(
          this,
          Invocation.getter(#tokenRepository),
        ),
      ) as _i2.ITokenRepository);

  @override
  set lastToken(_i6.Token? _lastToken) => super.noSuchMethod(
        Invocation.setter(
          #lastToken,
          _lastToken,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Stream<_i6.Token> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i7.Stream<_i6.Token>.empty(),
      ) as _i7.Stream<_i6.Token>);

  @override
  void onTokenPut(
    _i6.Token? token,
    _i7.EventSink<dynamic>? sink,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onTokenPut,
          [
            token,
            sink,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [OnDesautenticado].
///
/// See the documentation for Mockito's code generation for more information.
class MockOnDesautenticado extends _i1.Mock implements _i8.OnDesautenticado {
  MockOnDesautenticado() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Stream<Null> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i7.Stream<Null>.empty(),
      ) as _i7.Stream<Null>);
}

/// A class which mocks [EstaAutenticado].
///
/// See the documentation for Mockito's code generation for more information.
class MockEstaAutenticado extends _i1.Mock implements _i9.EstaAutenticado {
  MockEstaAutenticado() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ITokenRepository get tokenRepository => (super.noSuchMethod(
        Invocation.getter(#tokenRepository),
        returnValue: _FakeITokenRepository_0(
          this,
          Invocation.getter(#tokenRepository),
        ),
      ) as _i2.ITokenRepository);

  @override
  _i7.Future<bool> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
}

/// A class which mocks [Deslogar].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeslogar extends _i1.Mock implements _i10.Deslogar {
  MockDeslogar() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ITokenRepository get tokenRepository => (super.noSuchMethod(
        Invocation.getter(#tokenRepository),
        returnValue: _FakeITokenRepository_0(
          this,
          Invocation.getter(#tokenRepository),
        ),
      ) as _i2.ITokenRepository);

  @override
  _i3.IUsuariosRepository get usuariosRepository => (super.noSuchMethod(
        Invocation.getter(#usuariosRepository),
        returnValue: _FakeIUsuariosRepository_1(
          this,
          Invocation.getter(#usuariosRepository),
        ),
      ) as _i3.IUsuariosRepository);

  @override
  _i7.Future<void> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [RecuperarUsuarioDaSessao].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecuperarUsuarioDaSessao extends _i1.Mock
    implements _i11.RecuperarUsuarioDaSessao {
  MockRecuperarUsuarioDaSessao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.IUsuariosRepository get usuariosRepository => (super.noSuchMethod(
        Invocation.getter(#usuariosRepository),
        returnValue: _FakeIUsuariosRepository_1(
          this,
          Invocation.getter(#usuariosRepository),
        ),
      ) as _i3.IUsuariosRepository);

  @override
  _i7.Future<_i4.Usuario> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i7.Future<_i4.Usuario>.value(_FakeUsuario_2(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i7.Future<_i4.Usuario>);
}
