// Mocks generated by Mockito 5.4.5 from annotations
// in autenticacao/test/doubles/http.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:core/http/i_http_response.dart' as _i2;
import 'package:core/http/i_http_source.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIHttpResponse_0 extends _i1.SmartFake implements _i2.IHttpResponse {
  _FakeIHttpResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IHttpSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockIHttpSource extends _i1.Mock implements _i3.IHttpSource {
  MockIHttpSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.IHttpResponse> post({
    required dynamic body,
    required Uri? uri,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [],
          {
            #body: body,
            #uri: uri,
          },
        ),
        returnValue: _i4.Future<_i2.IHttpResponse>.value(_FakeIHttpResponse_0(
          this,
          Invocation.method(
            #post,
            [],
            {
              #body: body,
              #uri: uri,
            },
          ),
        )),
      ) as _i4.Future<_i2.IHttpResponse>);

  @override
  _i4.Future<_i2.IHttpResponse> put({
    required dynamic body,
    required Uri? uri,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [],
          {
            #body: body,
            #uri: uri,
          },
        ),
        returnValue: _i4.Future<_i2.IHttpResponse>.value(_FakeIHttpResponse_0(
          this,
          Invocation.method(
            #put,
            [],
            {
              #body: body,
              #uri: uri,
            },
          ),
        )),
      ) as _i4.Future<_i2.IHttpResponse>);

  @override
  _i4.Future<_i2.IHttpResponse> get({required Uri? uri}) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
          {#uri: uri},
        ),
        returnValue: _i4.Future<_i2.IHttpResponse>.value(_FakeIHttpResponse_0(
          this,
          Invocation.method(
            #get,
            [],
            {#uri: uri},
          ),
        )),
      ) as _i4.Future<_i2.IHttpResponse>);

  @override
  _i4.Future<_i2.IHttpResponse> delete({required Uri? uri}) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {#uri: uri},
        ),
        returnValue: _i4.Future<_i2.IHttpResponse>.value(_FakeIHttpResponse_0(
          this,
          Invocation.method(
            #delete,
            [],
            {#uri: uri},
          ),
        )),
      ) as _i4.Future<_i2.IHttpResponse>);
}
