// Mocks generated by Mockito 5.4.6 from annotations
// in autenticacao/test/doubles/uses_cases.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:autenticacao/domain/data/repositories/i_permissoes_repository.dart'
    as _i4;
import 'package:autenticacao/domain/data/repositories/i_usuarios_repository.dart'
    as _i2;
import 'package:autenticacao/domain/models/grupo_de_acesso.dart' as _i15;
import 'package:autenticacao/domain/models/permissao.dart' as _i13;
import 'package:autenticacao/domain/models/token.dart' as _i7;
import 'package:autenticacao/domain/models/usuario.dart' as _i3;
import 'package:autenticacao/domain/usecases/criar_token_de_autenticacao.dart'
    as _i5;
import 'package:autenticacao/domain/usecases/grupos_de_acesso/recuperar_grupo_de_acesso_do_usuario.dart'
    as _i14;
import 'package:autenticacao/domain/usecases/grupos_de_acesso/vincular_usuario_ao_grupo_de_acesso.dart'
    as _i16;
import 'package:autenticacao/domain/usecases/recuperar_permissoes.dart' as _i12;
import 'package:autenticacao/domain/usecases/recuperar_usuario.dart' as _i8;
import 'package:autenticacao/domain/usecases/recuperar_usuario_da_sessao.dart'
    as _i11;
import 'package:autenticacao/domain/usecases/recuperar_usuarios.dart' as _i10;
import 'package:autenticacao/domain/usecases/salvar_usuario.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIUsuariosRepository_0 extends _i1.SmartFake
    implements _i2.IUsuariosRepository {
  _FakeIUsuariosRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUsuario_1 extends _i1.SmartFake implements _i3.Usuario {
  _FakeUsuario_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIPermissoesRepository_2 extends _i1.SmartFake
    implements _i4.IPermissoesRepository {
  _FakeIPermissoesRepository_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CriarTokenDeAutenticacao].
///
/// See the documentation for Mockito's code generation for more information.
class MockCriarTokenDeAutenticacao extends _i1.Mock
    implements _i5.CriarTokenDeAutenticacao {
  MockCriarTokenDeAutenticacao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i7.Token?> call({
    required String? usuario,
    required String? senha,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {
            #usuario: usuario,
            #senha: senha,
          },
        ),
        returnValue: _i6.Future<_i7.Token?>.value(),
      ) as _i6.Future<_i7.Token?>);
}

/// A class which mocks [RecuperarUsuario].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecuperarUsuario extends _i1.Mock implements _i8.RecuperarUsuario {
  MockRecuperarUsuario() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IUsuariosRepository get usuariosRepository => (super.noSuchMethod(
        Invocation.getter(#usuariosRepository),
        returnValue: _FakeIUsuariosRepository_0(
          this,
          Invocation.getter(#usuariosRepository),
        ),
      ) as _i2.IUsuariosRepository);

  @override
  _i6.Future<_i3.Usuario?> call(int? id) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [id],
        ),
        returnValue: _i6.Future<_i3.Usuario?>.value(),
      ) as _i6.Future<_i3.Usuario?>);
}

/// A class which mocks [SalvarUsuario].
///
/// See the documentation for Mockito's code generation for more information.
class MockSalvarUsuario extends _i1.Mock implements _i9.SalvarUsuario {
  MockSalvarUsuario() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IUsuariosRepository get usuariosRepository => (super.noSuchMethod(
        Invocation.getter(#usuariosRepository),
        returnValue: _FakeIUsuariosRepository_0(
          this,
          Invocation.getter(#usuariosRepository),
        ),
      ) as _i2.IUsuariosRepository);

  @override
  _i6.Future<_i3.Usuario> call({
    required _i3.Usuario? usuario,
    int? idUsuario,
    required String? nome,
    String? login,
    String? senha,
    required _i3.TipoUsuario? tipo,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {
            #usuario: usuario,
            #idUsuario: idUsuario,
            #nome: nome,
            #login: login,
            #senha: senha,
            #tipo: tipo,
          },
        ),
        returnValue: _i6.Future<_i3.Usuario>.value(_FakeUsuario_1(
          this,
          Invocation.method(
            #call,
            [],
            {
              #usuario: usuario,
              #idUsuario: idUsuario,
              #nome: nome,
              #login: login,
              #senha: senha,
              #tipo: tipo,
            },
          ),
        )),
      ) as _i6.Future<_i3.Usuario>);
}

/// A class which mocks [RecuperarUsuarios].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecuperarUsuarios extends _i1.Mock implements _i10.RecuperarUsuarios {
  MockRecuperarUsuarios() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<Iterable<_i3.Usuario>> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i6.Future<Iterable<_i3.Usuario>>.value(<_i3.Usuario>[]),
      ) as _i6.Future<Iterable<_i3.Usuario>>);
}

/// A class which mocks [RecuperarUsuarioDaSessao].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecuperarUsuarioDaSessao extends _i1.Mock
    implements _i11.RecuperarUsuarioDaSessao {
  MockRecuperarUsuarioDaSessao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IUsuariosRepository get usuariosRepository => (super.noSuchMethod(
        Invocation.getter(#usuariosRepository),
        returnValue: _FakeIUsuariosRepository_0(
          this,
          Invocation.getter(#usuariosRepository),
        ),
      ) as _i2.IUsuariosRepository);

  @override
  _i6.Future<_i3.Usuario> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i6.Future<_i3.Usuario>.value(_FakeUsuario_1(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i6.Future<_i3.Usuario>);
}

/// A class which mocks [RecuperarPermissoes].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecuperarPermissoes extends _i1.Mock
    implements _i12.RecuperarPermissoes {
  MockRecuperarPermissoes() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.IPermissoesRepository get permissoesRepository => (super.noSuchMethod(
        Invocation.getter(#permissoesRepository),
        returnValue: _FakeIPermissoesRepository_2(
          this,
          Invocation.getter(#permissoesRepository),
        ),
      ) as _i4.IPermissoesRepository);

  @override
  _i6.Future<Iterable<_i13.Permissao>> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue:
            _i6.Future<Iterable<_i13.Permissao>>.value(<_i13.Permissao>[]),
      ) as _i6.Future<Iterable<_i13.Permissao>>);
}

/// A class which mocks [RecuperarGrupoDeAcessoDoUsuario].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecuperarGrupoDeAcessoDoUsuario extends _i1.Mock
    implements _i14.RecuperarGrupoDeAcessoDoUsuario {
  MockRecuperarGrupoDeAcessoDoUsuario() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i15.GrupoDeAcesso?> call({required int? idUsuario}) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#idUsuario: idUsuario},
        ),
        returnValue: _i6.Future<_i15.GrupoDeAcesso?>.value(),
      ) as _i6.Future<_i15.GrupoDeAcesso?>);
}

/// A class which mocks [VincularUsuarioAoGrupoDeAcesso].
///
/// See the documentation for Mockito's code generation for more information.
class MockVincularUsuarioAoGrupoDeAcesso extends _i1.Mock
    implements _i16.VincularUsuarioAoGrupoDeAcesso {
  MockVincularUsuarioAoGrupoDeAcesso() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<void> call({
    required int? idUsuario,
    required int? idGrupoDeAcesso,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {
            #idUsuario: idUsuario,
            #idGrupoDeAcesso: idGrupoDeAcesso,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}
